{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benlu\\\\Documents\\\\Apps\\\\demo\\\\src\\\\main\\\\ui\\\\react-frontend\\\\src\\\\components\\\\upload-files.component.js\";\nimport React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFiles: false,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      fileInfos: []\n    };\n    this.selectFile = this.selectFile.bind(this);\n  }\n\n  selectFile(event) {\n    console.log(\"temp\");\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    console.log(\"temp2\");\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      this.setState({\n        message: response.data.message\n      });\n      return UploadService.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then(response => {\n      this.setState({\n        fileInfos: response.data\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuenow\": progress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: progress + \"%\"\n          },\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-default\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        disabled: !selectedFiles,\n        onClick: this.upload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-light\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"List of Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: fileInfos && fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.url,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/benlu/Documents/Apps/demo/src/main/ui/react-frontend/src/components/upload-files.component.js"],"names":["React","Component","UploadService","UploadFiles","constructor","props","state","selectedFiles","currentFile","undefined","progress","message","fileInfos","selectFile","bind","event","console","log","setState","target","files","upload","Math","round","loaded","total","then","response","data","getFiles","catch","componentDidMount","render","width","map","file","index","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UploadService from \"../services/upload-files.service\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedFiles: false,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n\r\n      fileInfos: [],\r\n    };\r\n\r\n    this.selectFile = this.selectFile.bind(this);\r\n  }\r\n\r\n  selectFile(event) {\r\n    console.log(\"temp\");\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    console.log(\"temp2\");\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentFile && (\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <label className=\"btn btn-default\">\r\n          <input type=\"file\" onChange={this.selectFile} />\r\n        </label>\r\n\r\n        <button className=\"btn btn-success\"\r\n          disabled={!selectedFiles}\r\n          onClick={this.upload}\r\n        >\r\n          Upload\r\n        </button>\r\n\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <li className=\"list-group-item\" key={index}>\r\n                  <a href={file.url}>{file.name}</a>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}